# Generated by Django 5.1 on 2024-09-03 12:39

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Admin_user',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='氏名')),
                ('password', models.CharField(max_length=50, verbose_name='パスワード')),
                ('email', models.EmailField(max_length=254, verbose_name='メールアドレス')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='作成日時')),
                ('updated_date', models.DateTimeField(auto_now=True, null=True, verbose_name='更新日時')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='カテゴリ名')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='休日名')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='店舗名')),
                ('image', models.ImageField(blank=True, default='noImage.png', upload_to='', verbose_name='画像')),
                ('description', models.TextField(max_length=200, null=True, verbose_name='説明')),
                ('capacity', models.IntegerField(null=True, verbose_name='定員')),
                ('postal_code', models.CharField(max_length=7, null=True, verbose_name='郵便番号')),
                ('address', models.CharField(max_length=50, null=True, verbose_name='住所')),
                ('phonenumber', models.CharField(max_length=11, null=True, verbose_name='電話番号')),
                ('price_low', models.IntegerField(null=True, verbose_name='下限金額')),
                ('price_high', models.IntegerField(null=True, verbose_name='上限金額')),
                ('time_open', models.TimeField(null=True, verbose_name='開店時間')),
                ('time_close', models.TimeField(null=True, verbose_name='閉店時間')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='作成日時')),
                ('updated_date', models.DateTimeField(auto_now=True, null=True, verbose_name='更新日時')),
                ('category', models.ManyToManyField(blank=True, to='tabelog.category', verbose_name='カテゴリ')),
                ('holiday', models.ManyToManyField(blank=True, to='tabelog.holiday', verbose_name='店休日')),
            ],
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='作成日時')),
                ('updated_date', models.DateTimeField(auto_now=True, null=True, verbose_name='更新日時')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ユーザー名')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tabelog.location', verbose_name='店舗名')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(null=True, verbose_name='予約日')),
                ('time', models.TimeField(null=True, verbose_name='予約時間')),
                ('headcount', models.IntegerField(verbose_name='予約人数')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='作成日時')),
                ('updated_date', models.DateTimeField(auto_now=True, null=True, verbose_name='更新日時')),
                ('a', models.CharField(max_length=15)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='予約者名')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tabelog.location', verbose_name='店舗名')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(verbose_name='評価')),
                ('comment', models.TextField(null=True, verbose_name='コメント')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='作成日時')),
                ('updated_date', models.DateTimeField(auto_now=True, null=True, verbose_name='更新日時')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ユーザー名')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tabelog.location', verbose_name='店舗名')),
            ],
        ),
    ]
